name: Ubuntu 22.04 CI (GCC 9, 10, 11 and 12, LLVM 12, 13, 14)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ubuntu-build:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - {compiler: gcc}
          - {compiler: gcc-9}
          - {compiler: gcc-10}
          - {compiler: gcc-12}
          - {compiler: clang-12}
          - {compiler: clang-13}
          - {compiler: clang}
    steps:
      - uses: actions/checkout@v2
      - name: Use cmake (debug)
        run: |
          mkdir builddebug &&
          cd builddebug &&
          cmake .. -DCMAKE_BUILD_TYPE=buildundefsani -DSTREAMVBYTE_ENABLE_EXAMPLES=ON -DSTREAMVBYTE_ENABLE_TESTS=ON -DCMAKE_C_COMPILER=${{matrix.compiler}} &&
          cmake --build .   &&
          ctest --output-on-failure
      - name: Use cmake (release)
        run: |
          mkdir buildrelease &&
          cd buildrelease &&
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSTREAMVBYTE_ENABLE_EXAMPLES=ON -DSTREAMVBYTE_ENABLE_TESTS=ON &&
          cmake --build .   &&
          ctest --output-on-failure

      - name: Use cmake (undefined sanitizer)
        run: |
          mkdir buildundefsani &&
          cd buildundefsani &&
          cmake .. -DSTREAMVBYTE_SANITIZE_UNDEFINED=ON -DCMAKE_BUILD_TYPE=buildundefsani -DSTREAMVBYTE_ENABLE_EXAMPLES=ON -DSTREAMVBYTE_ENABLE_TESTS=ON &&
          cmake --build .   &&
          ctest --output-on-failure
